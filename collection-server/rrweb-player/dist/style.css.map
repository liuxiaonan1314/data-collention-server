{
  "version": 3,
  "file": "style.css",
  "sources": [
    "../src/Player.html",
    "../src/Controller.html",
    "../src/components/Switch.html"
  ],
  "sourcesContent": [
    "<div class=\"rr-player\" ref:player style=\"{playerStyle}\">\n  <div class=\"rr-player__frame\" ref:frame { style }></div>\n  {#if replayer}\n  <Controller\n    {\n    replayer\n    }\n    {showController}\n    {autoPlay}\n    {skipInactive}\n    on:fullscreen=\"fullscreen()\"\n  />\n  {/if}\n</div>\n\n<script>\n  import { Replayer, unpack } from 'rrweb';\n  import 'rrweb/dist/rrweb.min.css';\n  import {\n    inlineCss,\n    openFullscreen,\n    exitFullscreen,\n    isFullscreen,\n    onFullscreenChange,\n  } from './utils.js';\n\n  const controllerHeight = 80;\n\n  export default {\n    components: {\n      Controller: './Controller.html',\n    },\n    data() {\n      return {\n        showController: true,\n        width: 1024,\n        height: 576,\n        events: [],\n        autoPlay: true,\n        skipInactive: true,\n        replayer: null,\n        triggerFocus: true,\n      };\n    },\n    computed: {\n      style({ width, height }) {\n        return inlineCss({\n          width: `${width}px`,\n          height: `${height}px`,\n        });\n      },\n      playerStyle({ width, height, showController }) {\n        return inlineCss({\n          width: `${width}px`,\n          height: `${height + (showController ? controllerHeight : 0)}px`,\n        });\n      },\n    },\n    methods: {\n      updateScale(el, frameDimension) {\n        const { width, height } = this.get();\n        const widthScale = width / frameDimension.width;\n        const heightScale = height / frameDimension.height;\n        el.style.transform =\n          `scale(${Math.min(widthScale, heightScale)})` +\n          'translate(-50%, -50%)';\n      },\n      fullscreen() {\n        if (this.refs.player) {\n          isFullscreen() ? exitFullscreen() : openFullscreen(this.refs.player);\n        }\n      },\n      addEventListener(event, handler) {\n        const { replayer } = this.get();\n        replayer.on(event, handler);\n      },\n      addEvent(event) {\n        replayer.addEvent(event);\n      },\n    },\n    oncreate() {\n      const { events, triggerFocus } = this.get();\n      const replayer = new Replayer(events, {\n        speed: 1,\n        root: this.refs.frame,\n        skipInactive: true,\n        showWarning: true,\n        triggerFocus,\n        unpackFn: unpack,\n      });\n      replayer.on('resize', (dimension) =>\n        this.updateScale(replayer.wrapper, dimension),\n      );\n      this.set({\n        replayer,\n      });\n      this.fullscreenListener = onFullscreenChange(() => {\n        if (isFullscreen()) {\n          setTimeout(() => {\n            const { width, height } = this.get();\n            // store the original dimension which do not need to be reactive\n            this._width = width;\n            this._height = height;\n            const dimension = {\n              width: this.refs.player.offsetWidth,\n              height: this.refs.player.offsetHeight - controllerHeight,\n            };\n            this.set(dimension);\n            this.updateScale(replayer.wrapper, {\n              width: replayer.iframe.offsetWidth,\n              height: replayer.iframe.offsetHeight,\n            });\n          }, 0);\n        } else {\n          this.set({\n            width: this._width,\n            height: this._height,\n          });\n          this.updateScale(replayer.wrapper, {\n            width: replayer.iframe.offsetWidth,\n            height: replayer.iframe.offsetHeight,\n          });\n        }\n      });\n    },\n    ondestroy() {\n      if (this.fullscreenListener) {\n        this.fullscreenListener();\n      }\n    },\n  };\n</script>\n\n<style>\n  .rr-player {\n    position: relative;\n    background: white;\n    float: left;\n    border-radius: 5px;\n    box-shadow: 0 24px 48px rgba(17, 16, 62, 0.12);\n  }\n\n  .rr-player__frame {\n    overflow: hidden;\n  }\n\n  :global(.replayer-wrapper) {\n    float: left;\n    clear: both;\n    transform-origin: top left;\n    left: 50%;\n    top: 50%;\n  }\n\n  :global(.replayer-wrapper > iframe) {\n    border: none;\n  }\n</style>\n",
    "{#if showController}\n<div class=\"rr-controller\">\n  <div class=\"rr-timeline\">\n    <span class=\"rr-timeline__time\">{formatTime(currentTime)}</span>\n    <div\n      class=\"rr-progress\"\n      class:disabled=\"isSkipping\"\n      ref:progress on:click=\"handleProgressClick(event)\"\n    >\n      <div class=\"rr-progress__step\" ref:step style=\"width: {percentage}\"></div>\n      <div\n        class=\"rr-progress__handler\"\n        ref:handler\n        style=\"left: {percentage}\"\n      ></div>\n    </div>\n    <span class=\"rr-timeline__time\">{formatTime(meta.totalTime)}</span>\n  </div>\n  <div class=\"rr-controller__btns\">\n    <button on:click=\"toggle()\">\n      {#if isPlaying}\n      <svg\n        class=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        width=\"16\"\n        height=\"16\"\n      >\n        <path\n          d=\"M682.65984 128q53.00224 0 90.50112 37.49888t37.49888 90.50112l0 512q0 53.00224-37.49888 90.50112t-90.50112 37.49888-90.50112-37.49888-37.49888-90.50112l0-512q0-53.00224 37.49888-90.50112t90.50112-37.49888zM341.34016 128q53.00224 0 90.50112 37.49888t37.49888 90.50112l0 512q0 53.00224-37.49888 90.50112t-90.50112 37.49888-90.50112-37.49888-37.49888-90.50112l0-512q0-53.00224 37.49888-90.50112t90.50112-37.49888zM341.34016 213.34016q-17.67424 0-30.16704 12.4928t-12.4928 30.16704l0 512q0 17.67424 12.4928 30.16704t30.16704 12.4928 30.16704-12.4928 12.4928-30.16704l0-512q0-17.67424-12.4928-30.16704t-30.16704-12.4928zM682.65984 213.34016q-17.67424 0-30.16704 12.4928t-12.4928 30.16704l0 512q0 17.67424 12.4928 30.16704t30.16704 12.4928 30.16704-12.4928 12.4928-30.16704l0-512q0-17.67424-12.4928-30.16704t-30.16704-12.4928z\"\n        ></path>\n      </svg>\n      {:else}\n      <svg\n        class=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        width=\"16\"\n        height=\"16\"\n      >\n        <path\n          d=\"M170.65984 896l0-768 640 384zM644.66944 512l-388.66944-233.32864 0 466.65728z\"\n        ></path>\n      </svg>\n      {/if}\n    </button>\n    {#each [1, 2, 4, 8] as s}\n    <button\n      class:active=\"s === speed && !isSkipping\"\n      on:click=\"setSpeed(s)\"\n      disabled=\"{isSkipping}\"\n    >\n      {s}x\n    </button>\n    {/each}\n    <Switch id=\"skip\" bind:checked=\"skipInactive\" disabled=\"{isSkipping}\" label=\"skip inactive\" />\n    <button on:click=\"fire('fullscreen')\">\n      <svg\n        class=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        width=\"16\" height=\"16\"\n      >\n        <defs><style type=\"text/css\"></style></defs>\n        <path d=\"M916 380c-26.4 0-48-21.6-48-48L868 223.2 613.6 477.6c-18.4 18.4-48.8 18.4-68 0-18.4-18.4-18.4-48.8 0-68L800 156 692 156c-26.4 0-48-21.6-48-48 0-26.4 21.6-48 48-48l224 0c26.4 0 48 21.6 48 48l0 224C964 358.4 942.4 380 916 380zM231.2 860l108.8 0c26.4 0 48 21.6 48 48s-21.6 48-48 48l-224 0c-26.4 0-48-21.6-48-48l0-224c0-26.4 21.6-48 48-48 26.4 0 48 21.6 48 48L164 792l253.6-253.6c18.4-18.4 48.8-18.4 68 0 18.4 18.4 18.4 48.8 0 68L231.2 860z\" p-id=\"1286\"></path>\n      </svg>\n    </button>\n  </div>\n</div>\n{/if}\n\n<script>\n  import { formatTime } from './utils.js';\n\n  export default {\n    components: {\n      Switch: './components/Switch.html',\n    },\n    data() {\n      return {\n        currentTime: 0,\n        isPlaying: false,\n        isSkipping: false,\n        skipInactive: true,\n        speed: 1,\n      };\n    },\n    computed: {\n      meta({ replayer }) {\n        return replayer.getMetaData();\n      },\n      percentage({ currentTime, meta }) {\n        const percent = Math.min(1, currentTime / meta.totalTime);\n        return `${100 * percent}%`;\n      },\n    },\n    helpers: {\n      formatTime,\n    },\n    methods: {\n      loopTimer() {\n        const self = this;\n\n        function update() {\n          const { meta, isPlaying, replayer } = self.get();\n          if (!isPlaying) {\n            self.timer = null;\n            return;\n          }\n\n          const currentTime =\n            replayer.timer.timeOffset + replayer.getTimeOffset();\n          self.set({\n            currentTime,\n          });\n\n          if (currentTime < meta.totalTime) {\n            requestAnimationFrame(update);\n          }\n        }\n\n        this.timer = requestAnimationFrame(update);\n      },\n      play() {\n        const { replayer, currentTime } = this.get();\n        if (currentTime > 0) {\n          replayer.resume(currentTime);\n        } else {\n          this.set({ isPlaying: true });\n          replayer.play(currentTime);\n        }\n      },\n      pause() {\n        const { replayer } = this.get();\n        replayer.pause();\n      },\n      toggle() {\n        const { isPlaying } = this.get();\n        if (isPlaying) {\n          this.pause();\n        } else {\n          this.play();\n        }\n      },\n      setSpeed(speed) {\n        const { replayer, currentTime, isPlaying } = this.get();\n        // freeze before set speed, and resume if is playing before freeze\n        replayer.pause();\n        replayer.setConfig({ speed });\n        this.set({ speed });\n        if (isPlaying) {\n          replayer.resume(currentTime);\n        }\n      },\n      handleProgressClick(event) {\n        const { meta, replayer, isPlaying, isSkipping } = this.get();\n        if (isSkipping) {\n          return;\n        }\n        const progressRect = this.refs.progress.getBoundingClientRect();\n        const x = event.clientX - progressRect.left;\n        let percent = x / progressRect.width;\n        if (percent < 0) {\n          percent = 0;\n        } else if (percent > 1) {\n          percent = 1;\n        }\n        const timeOffset = meta.totalTime * percent;\n        this.set({ currentTime: timeOffset });\n        replayer.play(timeOffset);\n        if (!isPlaying) {\n          replayer.pause();\n        }\n      },\n    },\n    onupdate({ changed, current, previous }) {\n      if (current.replayer && !previous) {\n        window.replayer = current.replayer;\n        setTimeout(() => {\n          this.set({ isPlaying: true });\n        }, 0);\n        current.replayer.play(0);\n        if (!current.autoPlay) {\n          let firstFullSnapshotRebuilded = false;\n          current.replayer.on('fullsnapshot-rebuilded', () => {\n            if (!firstFullSnapshotRebuilded) {\n              firstFullSnapshotRebuilded = true;\n              current.replayer.pause();\n            }\n          });\n        }\n        current.replayer.on('pause', () => {\n          this.set({ isPlaying: false });\n        });\n        current.replayer.on('resume', () => {\n          this.set({ isPlaying: true });\n        });\n        current.replayer.on('finish', () => {\n          this.timer = null;\n          this.set({ isPlaying: false, currentTime: 0 });\n        });\n        current.replayer.on('skip-start', payload => {\n          payload.isSkipping = true;\n          this.set(payload);\n        });\n        current.replayer.on('skip-end', payload => {\n          payload.isSkipping = false;\n          this.set(payload);\n        });\n      }\n      if (changed.isPlaying) {\n        if (current.isPlaying && !this.timer) {\n          this.loopTimer();\n        }\n      }\n      if (changed.skipInactive) {\n        current.replayer.setConfig({ skipInactive: current.skipInactive });\n      }\n    },\n    ondestroy() {\n      const { isPlaying } = this.get();\n      if (isPlaying) {\n        this.pause();\n      }\n    },\n  };\n</script>\n\n<style>\n  .rr-controller {\n    width: 100%;\n    height: 80px;\n    background: #fff;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 0 0 5px 5px;\n  }\n\n  .rr-timeline {\n    width: 80%;\n    display: flex;\n    align-items: center;\n  }\n\n  .rr-timeline__time {\n    padding: 0 20px;\n    color: #11103e;\n  }\n\n  .rr-progress {\n    width: 100%;\n    height: 12px;\n    background: #eee;\n    position: relative;\n    border-radius: 3px;\n    cursor: pointer;\n    box-sizing: border-box;\n    border-top: solid 4px #fff;\n    border-bottom: solid 4px #fff;\n  }\n\n  .rr-progress.disabled {\n    cursor: not-allowed;\n  }\n\n  .rr-progress__step {\n    height: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    background: #e0e1fe;\n  }\n\n  .rr-progress__handler {\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    position: absolute;\n    top: 2px;\n    transform: translate(-50%, -50%);\n    background: rgb(73, 80, 246);\n  }\n\n  .rr-controller__btns {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 13px;\n  }\n\n  .rr-controller__btns button {\n    width: 32px;\n    height: 32px;\n    display: flex;\n    padding: 0;\n    align-items: center;\n    justify-content: center;\n    background: none;\n    border: none;\n    border-radius: 50%;\n    cursor: pointer;\n  }\n\n  .rr-controller__btns button:active {\n    background: #e0e1fe;\n  }\n\n  .rr-controller__btns button.active {\n    color: #fff;\n    background: rgb(73, 80, 246);\n  }\n\n  .rr-controller__btns button:disabled {\n    cursor: not-allowed;\n  }\n</style>\n",
    "<div class=\"switch\" class:disabled=\"disabled\">\n  <input\n    type=\"checkbox\"\n    id=\"{id}\"\n    bind:checked=\"checked\"\n    disabled=\"{disabled}\"\n  />\n  <label for=\"{id}\"></label> <span class=\"label\">{label}</span>\n</div>\n\n<style>\n  .switch {\n    height: 1em;\n    display: flex;\n    align-items: center;\n  }\n\n  .switch.disabled {\n    opacity: 0.5;\n  }\n\n  .label {\n    margin: 0 8px;\n  }\n\n  .switch input[type='checkbox'] {\n    position: absolute;\n    opacity: 0;\n  }\n\n  .switch label {\n    width: 2em;\n    height: 1em;\n    position: relative;\n    cursor: pointer;\n    display: block;\n  }\n\n  .switch.disabled label {\n    cursor: not-allowed;\n  }\n\n  .switch label:before {\n    content: '';\n    position: absolute;\n    width: 2em;\n    height: 1em;\n    left: 0.1em;\n    transition: background 0.1s ease;\n    background: rgba(73, 80, 246, 0.5);\n    border-radius: 50px;\n  }\n\n  .switch label:after {\n    content: '';\n    position: absolute;\n    width: 1em;\n    height: 1em;\n    border-radius: 50px;\n    left: 0;\n    transition: all 0.2s ease;\n    box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.3);\n    background: #fcfff4;\n    animation: switch-off 0.2s ease-out;\n    z-index: 2;\n  }\n\n  .switch input[type='checkbox']:checked + label:before {\n    background: rgb(73, 80, 246);\n  }\n\n  .switch input[type='checkbox']:checked + label:after {\n    animation: switch-on 0.2s ease-out;\n    left: 1.1em;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}